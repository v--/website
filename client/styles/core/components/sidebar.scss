@use "../../sizes";
@use "../../fonts";
@use "../../mixins";

@mixin sidebar-collapsed() {
  --sidebar-size-max-width: var(--sidebar-size-max-width-collapsed);
  --sidebar-transform-toggle-button: none;
  --sidebar-color-language-icon: var(--sidebar-color-disabled);
  --sidebar-content-visibility-collapsible: hidden;
}

@mixin sidebar-expanded() {
  --sidebar-size-max-width: var(--sidebar-size-max-width-expanded);
  --sidebar-transform-toggle-button: scaleX(-1);
  --sidebar-color-language-icon: var(--sidebar-color-foreground);
  --sidebar-content-visibility-collapsible: visible;
}

.sidebar {
  // Overrides
  --button-color-background-accented: var(--sidebar-color-background);
  --button-color-background-disabled: var(--button-color-background-normal);
  --button-color-background-normal:   var(--sidebar-color-background);
  --button-color-foreground-accented: var(--sidebar-color-accented);
  --button-color-foreground-normal:   var(--sidebar-color-foreground);
  --button-size-border: 0;
  --button-size-font: 0.9rem;
  --control-color-label-normal: var(--sidebar-color-foreground);
  --control-color-label-active: var(--sidebar-color-foreground);
  --control-color-label-accented: var(--sidebar-color-accented);
  --divider-color: var(--sidebar-color-divider);
  --sidebar-size-max-width-collapsed: #{sizes.$sidebar-size-max-width-collapsed-loose};
  --sidebar-size-max-width-expanded:  #{sizes.$sidebar-size-max-width-expanded};

  display: flex;
  flex-direction: column;
  overflow: hidden auto;
  max-width: var(--sidebar-size-max-width);
  height: 100%;
  background-color: var(--sidebar-color-background);
  font-size: 0.9rem;
  /* stylelint-disable-next-line plugin/no-low-performance-animation-properties */
  transition: max-width var(--sidebar-duration-collapse);
  scrollbar-gutter: auto;
  overscroll-behavior-y: contain;

  // The two width queries interlap at the threshold. I tried subtracting 1px from this one, but then neither matched at #{threshold - 1px}.
  @media (max-width: #{sizes.$sidebar-size-threshold-collapse}) {
    --sidebar-size-max-width-collapsed: #{sizes.$sidebar-size-max-width-collapsed-dense};

    &:not(.sidebar-expanded) {
      @include sidebar-collapsed;
    }
  }

  @media (min-width: #{sizes.$sidebar-size-threshold-collapse}) {
    &:not(.sidebar-collapsed) {
      @include sidebar-expanded;
    }
  }

  &.sidebar-expanded {
    @include sidebar-expanded;
  }

  &.sidebar-collapsed {
    @include sidebar-collapsed;
  }

  &-entry {
    --icon-size-diameter: #{sizes.$sidebar-size-icon-diameter};
    --icon-size-padding:  calc((var(--sidebar-size-max-width-collapsed) - var(--icon-size-diameter)) / 2 - 1px);
    --button-size-hpadding: 0 calc(var(--icon-size-padding) / 2);
    --button-size-vpadding: 0;

    width: 100%;
    outline-offset: var(--button-size-outline-offset);
    font-weight: bold;
    line-height: var(--sidebar-size-max-width-collapsed);
    text-align: left;
    text-transform: uppercase;
    white-space: pre; // Don't try to wrap the text while collapsed or transitioning

    &-icon {
      width: var(--icon-size-diameter);
    }

    &-collapsible-content {
      transition: content-visibility var(--sidebar-duration-collapse);
      transition-behavior: allow-discrete;
      content-visibility: var(--sidebar-content-visibility-collapsible);
    }
  }

  &-collapse-button {
    --icon-transform: var(--sidebar-transform-toggle-button);
  }

  &-navigation {
    display: flex;
    flex-grow: 2;
    flex-direction: column;

    .sidebar-entry[aria-current="page"] {
      --button-color-foreground-normal: var(--sidebar-color-foreground-active);
      --button-color-foreground-accented: var(--sidebar-color-accented-active);
      --button-color-background-normal: var(--sidebar-color-background-active);
      --button-color-background-accented: var(--sidebar-color-background-active);
    }
  }

  &-langchange {
    display: flex;
    align-items: center;

    // Field sets have padding, margins and min-width by default
    min-width: 0;
    margin: 0;
    padding-inline: var(--button-size-hpadding);
    padding-block: 0;

    &-info-icon {
      flex-shrink: 0;
    }

    &:not([disabled]) &-info-icon {
      --icon-color: var(--sidebar-color-language-icon);
      --icon-transition-properties: fill;
    }

    &[disabled] {
      --icon-color: var(--sidebar-color-disabled);
    }

    &-radio-group {
      display: flex;
    }

    &-radio-label {
      --control-size-label-vpadding: 0;
      --control-size-label-hpadding: var(--body-size-mf);
    }

    // It is important for this not to be a nested selector in order for the mixin to handle the disabled state
    &-radio-control {
      @include mixins.radio-control-restyle(
        var(--sidebar-color-foreground),
        var(--sidebar-color-background),
        var(--sidebar-color-accented),
      );
    }
  }
}
