{"version":3,"file":null,"sources":["../../../client/code/core/support/functional.js","../../../client/code/core/classes/view.js","../../../client/code/core/components/radio.js","../../../client/code/core/classes/scheduler.js","../../../client/code/core/support/misc.js","../../../client/code/sorting/constants/periods.js","../../../client/code/core/event_bus.js","../../../client/code/sorting/components/sorter.js","../../../client/code/sorting/constants/sorters.js","../../../client/code/sorting/components/demo.js","../../../client/code/sorting/classes/algorithm.js","../../../client/code/sorting/algos/insertion.js","../../../client/code/sorting/algos/selection.js","../../../client/code/sorting/algos/bubble.js","../../../client/code/sorting/algos/gnome.js","../../../client/code/sorting/algos/shell.js","../../../client/code/sorting/algos/merge.js","../../../client/code/sorting/algos/heap.js","../../../client/code/core/support/numeric.js","../../../client/code/sorting/algos/quick.js","../../../client/code/sorting/algos/index.js","../../../client/code/sorting/view.js"],"sourcesContent":["export function noop() {}\n\nexport function noopAsync() {\n    return Promise.resolve();\n}\n\nexport function identity(value) {\n    return value;\n}\n\nexport function factorize(value, transform = identity) {\n    return () => transform(value);\n}\n\nexport function asyncFactorize(value) {\n    return factorize(value, ::Promise.resolve);\n}\n\nexport function constructs(constructor) {\n    return (...data) => new constructor(...data);\n}\n\nexport function functionize(value) {\n    return value instanceof Function ? value : factorize(value);\n}\n\nexport function accessor(accessor) {\n    if (accessor instanceof Function)\n        return accessor;\n\n    if (accessor !== undefined)\n        return value => value[accessor];\n\n    return identity;\n}\n","import Vue from 'vue';\n\nimport { factorize, functionize, noopAsync } from 'code/core/support/functional';\n\nfunction getTitle(name, title) {\n    if (!title)\n        return factorize([name]);\n\n    if (typeof title === 'string')\n        return factorize([title]);\n\n    return functionize(title);\n}\n\nexport default class View {\n    constructor({ name, title, component, testPath, inject = false, resolve = noopAsync }) {\n        Object.assign(this, {\n            name, component, resolve,\n            testPath: testPath || (path => path === `/${name}`),\n            getTitle: getTitle(name, title),\n        });\n\n        if (inject)\n            Vue.component(component.options.name, component);\n\n        Object.freeze(this);\n    }\n}\n","import Vue from 'vue';\n\nimport template from 'views/core/components/radio';\n\nexport default Vue.extend({\n    template: template,\n\n    props: {\n        value:    { required: true },\n        domain:   { type: Array, required: true },\n        onChange: { type: Function, required: true }\n    }\n});\n","import { noop } from 'code/core/support/functional';\n\nexport default class Scheduler {\n    get isRunning() {\n        return this.interval !== null;\n    }\n\n    constructor(period, callback = null) {\n        this.interval = null;\n        this.period = period;\n        this.callback = callback || noop;\n    }\n\n    start() {\n        this.stop();\n        this.interval = setInterval(this.callback, this.period);\n    }\n\n    stop() {\n        clearInterval(this.interval);\n        this.interval = null;\n    }\n}\n","import { identity, accessor } from 'code/core/support/functional';\n\nexport function basename(string, suffix = '') {\n    let result = string.match(/([^\\/]*)(?:\\/+)?$/)[1];\n\n    if (result.endsWith(suffix))\n        return result.replace(suffix, '');\n\n    return result;\n}\n\nexport function dirname(string) {\n    return string.replace(/(\\/+)?[^\\/]*(\\/+)?$/, '');\n}\n\nexport function last(array) {\n    pre: array.length > 0;\n    return array[array.length - 1];\n}\n\nexport function groupBy(source, prop = identity) {\n    const result = {};\n    const getter = accessor(prop);\n\n    for (const item of source) {\n        const key = getter(item);\n\n        if (key in result)\n            result[key].push(item);\n        else\n            result[key] = [item];\n    }\n\n    return result;\n}\n\nexport function mapToObject(source, transform) {\n    const result = {};\n\n    for (const item of source) {\n        const value = transform(item);\n        result[value[0]] = value[1];\n    }\n\n    return result;\n}\n\nexport function startsWith(array, subarr) {\n    return subarr.every((element, i) => array[i] === element);\n}\n\nexport function startsWithString(string, substr) {\n    return string.slice(0, substr.length) === substr;\n}\n\nexport function capitalize(string) {\n    if (string.length === 0) return '';\n    return string[0].toUpperCase() + string.substr(1);\n}\n\nexport function repeat(value, goal) {\n    return new Array(goal + 1).join(value);\n}\n","import { last } from 'code/core/support/misc';\n\nexport const PERIODS = [\n    { 'text': 'Slow',   value: 500 },\n    { 'text': 'Medium', value: 100 },\n    { 'text': 'Fast',   value: 10 }\n];\n\nexport const DEFAULT_PERIOD = last(PERIODS).value;\n","import Vue from 'vue';\n\nexport default new Vue();\n","import Vue from 'vue';\n\nimport Scheduler from 'code/core/classes/scheduler';\n\nimport { DEFAULT_PERIOD } from 'code/sorting/constants/periods';\nimport template from 'views/sorting/components/sorter';\nimport bus from 'code/core/event_bus';\n\nexport default Vue.extend({\n    template: template,\n\n    props: {\n        period:  { type: Number, required: true },\n        name:    { type: String, required: true },\n        prototype: { type: Array, required: true },\n        algorithm: { type: Object, required: true }\n    },\n\n    data: () => ({\n        scheduler: new Scheduler(DEFAULT_PERIOD),\n        iterator: null,\n        complete: false,\n        lastChanged: [],\n        array: []\n    }),\n\n    computed: {\n        ratio: context => 100 / context.array.length,\n        rawNodes: context => context.$el.lastChild.children\n    },\n\n    methods: {\n        getWidth(item) {\n            return `${item * this.ratio}%`;\n        },\n\n        swap(a, b) {\n            const temp = this.array[a];\n            Vue.set(this.array, a, this.array[b]);\n            Vue.set(this.array, b, temp);\n        },\n\n        clearLastChanged() {\n            for (let index of this.lastChanged)\n                this.rawNodes[index].className = '';\n\n            this.lastChanged = [];\n        },\n\n        // The update itself is done cleanly with Vue, hovewer changing the css classes is not\n        iteration() {\n            const result = this.iterator.next();\n            this.clearLastChanged();\n\n            if (result.done) {\n                this.complete = true;\n                return;\n            }\n\n            const { a, b } = result.value;\n\n            if (result.value.swap)\n                this.swap(a, b);\n\n        try {\n            this.rawNodes[a].className = this.rawNodes[b].className = result.value.swap ? 'swapped' : 'still';\n        } catch (e) {\n            this.scheduler.stop();\n        }\n            this.lastChanged = [a, b];\n        },\n\n        reinitialize() {\n            this.scheduler.stop();\n            this.clearLastChanged();\n            this.array = Object.create(this.prototype);\n            this.iterator = this.algorithm.instantiate(this.array);\n            this.complete = false;\n        },\n\n        sort(algorithm) {\n            if (!algorithm || algorithm === this.algorithm) {\n                this.reinitialize();\n                this.scheduler.start();\n            }\n        }\n    },\n\n    watch: {\n        prototype() {\n            this.reinitialize();\n        },\n\n        period() {\n            const start = this.scheduler.isRunning;\n\n            this.scheduler.stop();\n            this.scheduler.period = this.period;\n\n            if (start)\n                this.scheduler.start();\n        }\n    },\n\n    mounted() {\n        this.reinitialize();\n        this.scheduler.callback = this.iteration;\n        bus.$on('sort', this.sort);\n    },\n\n    beforeDestroy() {\n        this.scheduler.stop();\n        bus.$off('sort', this.sort);\n    }\n});\n","export default [\n    {\n        name: 'Ordered',\n        prototype: [1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]\n    },\n\n    {\n        name: 'Shuffled',\n        prototype: [13, 4,  3,  19, 6,  15, 9,  22, 16, 21, 12, 8,  7,  24, 18, 2,  25, 1,  23, 5,  14, 17, 20, 10, 11]\n    },\n\n    {\n        name: 'Reversed',\n        prototype: [25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9,  8,  7,  6,  5,  4,  3,  2,  1]\n    },\n\n    {\n        name: 'Groupped',\n        prototype: [25, 20, 10, 15, 25, 25, 5,  5,  5,  20, 10, 5,  15, 20, 15, 25, 15, 20, 25, 10, 15, 10, 5, 20, 10]\n    }\n];\n","import Vue from 'vue';\n\nimport { factorize } from 'code/core/support/functional';\n\nimport Sorter from 'code/sorting/components/sorter';\nimport sorters from 'code/sorting/constants/sorters';\nimport template from 'views/sorting/components/demo';\nimport bus from 'code/core/event_bus';\n\nexport default Vue.extend({\n    template: template,\n    components: { Sorter },\n\n    props: {\n        period: { type: Number, required: true },\n        algorithm: { type: Object, required: true }\n    },\n\n    data: factorize({\n        sorters\n    }),\n\n    methods: {\n        sort() {\n            bus.$emit('sort', this.algorithm);\n        }\n    }\n});\n","import { last } from 'code/core/support/misc';\n\nfunction findMinIndex(array) {\n    let min = Infinity, minIndex = 0;\n\n    for (const [index, value] of array.entries()) {\n        if (value < min) {\n            min = value;\n            minIndex = index;\n        }\n    }\n\n    return minIndex;\n}\n\nexport default class Algorithm {\n    static totalOrder(array) {\n        const copy = Array.from(array);\n        const result = [];\n\n        for (let i = 0; i < copy.length; i++) {\n            const minIndex = findMinIndex(copy);\n            copy[minIndex] = Infinity;\n            result[minIndex] = i;\n        }\n\n        return result;\n    }\n\n    constructor(name, description, sorter) {\n        Object.assign(this, { name, description, sorter });\n        Object.freeze(this);\n    }\n\n    instantiate(array) {\n        const uniq = Algorithm.totalOrder(array);\n        const result = [];\n\n        Object.defineProperty(uniq, 'swap', {\n            value(a, b, swap) {\n                result.push({ a, b, swap });\n\n                if (swap)\n                    [ this[a], this[b] ] = [ this[b], this[a] ];\n\n                return last(result);\n            }\n        });\n\n        this.sorter(uniq);\n        return result[Symbol.iterator]();\n    }\n}\n","import Algorithm from 'code/sorting/classes/algorithm';\nimport template from 'views/sorting/algos/insertion';\n\nfunction sorter(array) {\n    for (let i = 1; i < array.length; i++)\n        for (let j = i; j > 0; --j)\n            array.swap(j - 1, j, array[j - 1] > array[j]);\n}\n\nexport default new Algorithm('Insertion sort', template, sorter);\n","import Algorithm from 'code/sorting/classes/algorithm';\nimport template from 'views/sorting/algos/selection';\n\nfunction sorter(array) {\n    for (let i = 0; i < array.length - 1; i++) {\n        let min = i;\n\n        for (let j = i; j < array.length; j++) {\n            array.swap(i, j, false);\n\n            if (array[j] < array[min])\n                min = j;\n        }\n\n        array.swap(min, i, min !== i);\n    }\n}\n\nexport default new Algorithm('Selection sort', template, sorter);\n","import Algorithm from 'code/sorting/classes/algorithm';\nimport template from 'views/sorting/algos/bubble';\n\nfunction sorter(array) {\n    let ordered = false;\n\n    while (!ordered) {\n        ordered = true;\n\n        for (let i = 1; i < array.length; i++) {\n            const current = array[i - 1] <= array[i];\n            ordered &= current;\n            array.swap(i - 1, i, !current);\n        }\n    }\n}\n\nexport default new Algorithm('Bubble sort', template, sorter);\n","import Algorithm from 'code/sorting/classes/algorithm';\nimport template from 'views/sorting/algos/gnome';\n\nfunction sorter(array) {\n    for (let pos = 0; pos < array.length; ) {\n        const swap = pos !== 0 && array[pos - 1] > array[pos];\n        array.swap(Math.max(0, pos - 1), pos, swap);\n\n        if (swap)\n            pos--;\n        else\n            pos++;\n    }\n}\n\nexport default new Algorithm('Gnome sort', template, sorter);\n","import Algorithm from 'code/sorting/classes/algorithm';\nimport template from 'views/sorting/algos/shell';\n\nfunction sorter(array) {\n    for (let gap = Math.pow(2, Math.floor(Math.log2(array.length))); gap >= 1; gap /= 2)\n        for (let i = gap; i < array.length; i++) {\n            let j = i;\n            let swappable = i;\n\n            while (j >= gap) {\n                const a = j, b = j - gap;\n                const swap = array[b] > array[swappable];\n                array.swap(a, b, swap);\n\n                if (swap) {\n                    if (swappable === b) swappable = a;\n                    if (swappable === a) swappable = b;\n                } else {\n                    break;\n                }\n\n                j -= gap;\n            }\n\n            array.swap(j, swappable, true);\n        }\n}\n\nexport default new Algorithm('Shell sort', template, sorter);\n","import Algorithm from 'code/sorting/classes/algorithm';\nimport template from 'views/sorting/algos/merge';\n\nfunction sorter(array) {\n    const buffer = [];\n\n    for (let span = 1; span < array.length; span *= 2)\n        for (let start = 0; start < array.length; start += 2 * span) {\n            const middle = Math.min(start + span, array.length),\n                  end = Math.min(start + 2 * span, array.length);\n\n            let left = start,\n                right = middle;\n\n            for (let i = start; i < end; i++)\n                if (left < middle && (end === right || array[left] < array[right]))\n                    buffer[i] = array[left++];\n                else\n                    buffer[i] = array[right++];\n\n            for (let i = start; i < end; i++) {\n                const index = array.indexOf(buffer[i]);\n                array.swap(index, i, i !== index);\n            }\n    }\n}\n\nexport default new Algorithm('Merge sort (bottom-up)', template, sorter);\n","import Algorithm from 'code/sorting/classes/algorithm';\nimport template from 'views/sorting/algos/heap';\n\nfunction sorter(array) {\n    function heapCheck(heapSize, i) {\n        const largest = [i, 2 * i + 1, 2 * i + 2]\n            .filter(x => x < heapSize)\n            .reduce((x, payload) => array[x] >= array[payload] ? x : payload); // Max by array[x]\n\n        return array.swap(i, largest, i !== largest);\n    }\n\n    for (let i = Math.floor(array.length / 2); i >= 0; --i) {\n        let result = heapCheck(array.length, i);\n\n        while (result.swap)\n            result = heapCheck(array.length, result.b);\n    }\n\n    for (let i = array.length - 1; i >= 1; --i) {\n        array.swap(0, i, true);\n        let result = heapCheck(i, 0);\n\n        while (result.swap)\n            result = heapCheck(i, result.b);\n    }\n}\n\nexport default new Algorithm('Heap sort', template, sorter);\n","const BINARY_INCREMENT = 1024;\n\nexport function humanizeSize(bytes) {\n    if (bytes < BINARY_INCREMENT)\n        return `${bytes} Bytes`;\n\n    let ratio = bytes / BINARY_INCREMENT;\n\n    for (const size of 'KMGTP') {\n        if (ratio < BINARY_INCREMENT / 2)\n            return `${ratio.toFixed(2)} ${size}iB`;\n\n        ratio /= BINARY_INCREMENT;\n    }\n\n    return 'Invalid size';\n}\n\nexport function randomInt(min, max) {\n    return min + Math.round(Math.random() * (max - min));\n}\n\nexport function clam(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n\nexport function isBetween(value, min, max) {\n    return value >= min && value <= max;\n}\n\nexport function extendTo(value, min, max) {\n    pre: isBetween(value, 0, 1);\n    return min + (max - min) * value;\n}\n\nexport function pixelize(value) {\n    return `${value}px`;\n}\n\nexport function percentize(value) {\n    pre: isBetween(value, 0, 1);\n    return `${extendTo(value, 0, 100)}%`;\n}\n\nexport function modulo(number, modulo) {\n    return (number % modulo + modulo) % modulo;\n}\n\nexport function direction(condition) {\n    return condition ? 1 : -1;\n}\n","import { randomInt } from 'code/core/support/numeric';\n\nimport Algorithm from 'code/sorting/classes/algorithm';\nimport template from 'views/sorting/algos/quick';\n\nfunction sorter(array) {\n    function partition(lower, upper) {\n        const pivotIndex = randomInt(lower, upper);\n        const pivot = array[pivotIndex];\n        let p = lower;\n\n        array.swap(pivotIndex, upper, pivotIndex !== upper);\n\n        for (let i = lower; i < upper; i++)\n            if (array[i] < pivot)\n                array.swap(i, p++, true);\n            else\n                array.swap(i, p, false);\n\n        return array.swap(p, upper, true).a;\n    }\n\n    function quicksort(lower, upper) {\n        const pivotIndex = partition(lower, upper);\n\n        if (lower < pivotIndex)\n            quicksort(lower, pivotIndex);\n\n        if (upper > pivotIndex + 1)\n            quicksort(pivotIndex + 1, upper);\n    }\n\n    quicksort(0, array.length - 1);\n}\n\nexport default new Algorithm('QuickSort (randomized Lomuto partitioning)', template, sorter);\n","import Insertion from 'code/sorting/algos/insertion';\nimport Selection from 'code/sorting/algos/selection';\nimport Bubble from 'code/sorting/algos/bubble';\nimport Gnome from 'code/sorting/algos/gnome';\nimport Shell from 'code/sorting/algos/shell';\nimport Merge from 'code/sorting/algos/merge';\nimport Heap from 'code/sorting/algos/heap';\nimport Quick from 'code/sorting/algos/quick';\n\nexport default [\n    Insertion,\n    Selection,\n    Bubble,\n    Gnome,\n    Shell,\n    Merge,\n    Heap,\n    Quick\n];\n","import Vue from 'vue';\n\nimport View from 'code/core/classes/view';\nimport Radio from 'code/core/components/radio';\nimport { factorize } from 'code/core/support/functional';\n\nimport Demo from 'code/sorting/components/demo';\nimport algorithms from 'code/sorting/algos/index';\nimport bus from 'code/core/event_bus';\nimport template from 'views/sorting/view';\nimport { PERIODS, DEFAULT_PERIOD } from 'code/sorting/constants/periods';\n\nexport default new View({\n    name: 'code/sorting',\n    title: ['code', 'sorting'],\n    inject: true,\n\n    component: Vue.extend({\n        name: 'CodeSorting',\n        template: template,\n        components: { Radio, Demo },\n\n        data: factorize({\n            algorithms: algorithms,\n            period: DEFAULT_PERIOD,\n            domain: PERIODS\n        }),\n\n        methods: {\n            sortall() {\n                bus.$emit('sort');\n            },\n\n            onPeriodChange(value) {\n                this.period = value;\n            }\n        }\n    })\n});\n"],"names":["noop","noopAsync","Promise","resolve","identity","value","factorize","transform","functionize","Function","getTitle","name","title","View","component","testPath","inject","assign","path","Vue","options","freeze","extend","template","required","type","Array","Scheduler","interval","period","callback","stop","setInterval","last","array","length","PERIODS","DEFAULT_PERIOD","Number","String","Object","context","$el","lastChild","children","item","ratio","a","b","temp","set","lastChanged","index","rawNodes","className","result","iterator","next","clearLastChanged","done","complete","swap","e","scheduler","create","prototype","algorithm","instantiate","reinitialize","start","isRunning","iteration","$on","sort","$off","Sorter","$emit","findMinIndex","min","Infinity","minIndex","entries","Algorithm","copy","from","i","description","sorter","uniq","totalOrder","defineProperty","push","Symbol","j","ordered","current","pos","Math","max","gap","pow","floor","log2","swappable","buffer","span","middle","end","left","right","indexOf","heapCheck","heapSize","largest","filter","x","reduce","payload","randomInt","round","random","partition","lower","upper","pivotIndex","pivot","p","quicksort","Insertion","Selection","Bubble","Gnome","Shell","Merge","Heap","Quick","Radio","Demo","algorithms"],"mappings":"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"}